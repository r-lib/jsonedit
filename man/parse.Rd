% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse.R
\name{parse}
\alias{parse}
\alias{text_parse}
\alias{file_parse}
\alias{text_parse_at_path}
\alias{file_parse_at_path}
\alias{parse_options}
\title{Parse a JSON file or string}
\usage{
text_parse(text, ..., parse_options = NULL)

file_parse(file, ..., parse_options = NULL)

text_parse_at_path(text, path, ..., parse_options = NULL)

file_parse_at_path(file, path, ..., parse_options = NULL)

parse_options(
  allow_comments = TRUE,
  allow_trailing_comma = TRUE,
  allow_empty_content = TRUE
)
}
\arguments{
\item{text}{A single string containing JSON.}

\item{...}{These dots are for future extensions and must be empty.}

\item{parse_options}{The result of \code{\link[=parse_options]{parse_options()}}. If \code{NULL}, a default
set of options are used.}

\item{file}{Path to file on disk. File must exist.}

\item{path}{Either:
\itemize{
\item A character vector representing a path to a JSON element by name, i.e.
\code{c("[r]", "editor.formatOnSave")}.
\item A list of strings or numbers representing a path to a JSON element by
name and position, i.e. \code{list("[r]", "editor.rulers", 2)}.
}

Numeric positions are specified as positive integers and are only
applicable for arrays.}

\item{allow_comments}{Whether or not to allow comments when parsing.}

\item{allow_trailing_comma}{Whether or not to allow a trailing comma when
parsing.}

\item{allow_empty_content}{Whether or not to allow empty strings or empty
files when parsing.}
}
\description{
\itemize{
\item \code{text_parse()} and \code{file_parse()} parse JSON into an R object.
\item \code{text_parse_at_path()} and \code{file_parse_at_path()} parse JSON at a requested
JSON path, i.e. \code{c("[r]", "editor.formatOnSave")}.
}
}
\examples{
text <- '
{
  "a": 1,
  "b": [2, 3, 4],
  "[r]": {
    "this": "setting",
    // A comment!
    "that": true
  }, // A trailing comma!
}
'

# Parse the JSON, allowing comments (i.e. JSONC)
str(text_parse(text))

# Try to parse the JSON, but comments aren't allowed!
parse_options <- parse_options(allow_comments = FALSE)
try(text_parse(text, parse_options = parse_options))

# Try to parse the JSON, but trailing commas aren't allowed!
parse_options <- parse_options(allow_trailing_commas = FALSE)
try(text_parse(text, parse_options = parse_options))

# Parse only a subset of the JSON
text_parse_at_path(text, "b")
text_parse_at_path(text, "[r]")
text_parse_at_path(text, c("[r]", "that"))

# Use a `list()` combining strings and positional indices when
# arrays are involved
text_parse_at_path(text, list("b", 2))
}
